import * as React from "react";
import configureStore from "redux-mock-store";
import { Provider } from "react-redux";
import { MemoryRouter } from "react-router-dom";
<% if(route) { %>import { Router } from "react-router-dom";<% } %>
<% if(!redux) { %>import { create } from "react-test-renderer";<% } %>
<% if(redux) { %>import { shallow, configure } from "enzyme";
const Adapter = require("enzyme-adapter-react-16");<% } %>
import "jest";
import <%= component.upperCamel %> from "./";

describe("<%= component.upperCamel %> Component", () => {
    <% if(!redux) { %>const store = configureStore()();
    const component = create(<Provider store={store}><% if(route) { %><MemoryRouter><% } %><<%= component.upperCamel %>/><% if(route) { %></MemoryRouter><% } %></Provider>);
    const tree = component.toJSON();
    <% } %><% if(redux) { %>configure({ adapter: new Adapter() });
    const tree = shallow(<% if(route) { %><MemoryRouter><% } %><<%= component.upperCamel %>/><% if(route) { %></MemoryRouter><% } %>).dive();
    <% } %> 
    it("renders", () => {
        expect(tree).toMatchSnapshot();
    })
})